<?php 
/*
 * GetSatisfactionAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace GetSatisfactionAPILib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class Topic implements JsonSerializable {
    /**
     * The number of replies (but not comments) that are associated with the topic and have not been archived or deleted.
     * @maps active_replies
     * @var integer $activeReplies public property
     */
    public $activeReplies;

    /**
     * URL for the topic page
     * @maps at_sfn
     * @var string $atSfn public property
     */
    public $atSfn;

    /**
     * Returns the following data block for the author of the post (see the people object for more information)
     * @var Author $author public property
     */
    public $author;

    /**
     * Whether the topic was created by a champion or not. Returns “true” or “false”.
     * @var bool $champion public property
     */
    public $champion;

    /**
     * A timestamp of when the topic was closed. This property only exists if “is_closed” is True.
     * @maps closed_at
     * @var string $closedAt public property
     */
    public $closedAt;

    /**
     * The id for the company in Get Satisfaction
     * @maps company_id
     * @var integer $companyId public property
     */
    public $companyId;

    /**
     * The body of the topic
     * @var string $content public property
     */
    public $content;

    /**
     * The date and time topic was created
     * @maps created_at
     * @var string $createdAt public property
     */
    public $createdAt;

    /**
     * Emoticon information
     * @var Emotitag $emotitag public property
     */
    public $emotitag;

    /**
     * Whether the topic was created by an employee or not. Returns “true” or “false”.
     * @var bool $employee public property
     */
    public $employee;

    /**
     * The number of people following the topic
     * @maps follower_count
     * @var integer $followerCount public property
     */
    public $followerCount;

    /**
     * Whether the topic is being followed by the user who is authenticating the API call. Returns “true” or “false”
     * @var bool $following public property
     */
    public $following;

    /**
     * Whether the topic has any replies promoted, either through stars or as a company answer. Returns “true” or “false”
     * @maps has_promoted_replies
     * @var bool $hasPromotedReplies public property
     */
    public $hasPromotedReplies;

    /**
     * The topic ID
     * @var integer $id public property
     */
    public $id;

    /**
     * Whether the post has been archived. Returns “true” or “false”
     * @maps is_archived
     * @var bool $isArchived public property
     */
    public $isArchived;

    /**
     * Boolean to show if the topic has been closed. True if closed, False if not closed.
     * @maps is_closed
     * @var bool $isClosed public property
     */
    public $isClosed;

    /**
     * Whether the post has been removed. Returns “true” or “false”
     * @maps is_removed
     * @var bool $isRemoved public property
     */
    public $isRemoved;

    /**
     * Whether the post has been classified as spam. Returns “true” or “false”
     * @maps is_spam
     * @var bool $isSpam public property
     */
    public $isSpam;

    /**
     * The date and time of last topic activity
     * @maps last_active_at
     * @var string $lastActiveAt public property
     */
    public $lastActiveAt;

    /**
     * The URL slug for the particular topic
     * @maps me_too
     * @var string $meToo public property
     */
    public $meToo;

    /**
     * The count of people who have clicked the +1 button (including the original poster)
     * @maps me_too_count
     * @var integer $meTooCount public property
     */
    public $meTooCount;

    /**
     * The most recent action taken on the topic. Values are “create”, “comment”, and “follow”.
     * @maps most_recent_activity
     * @var string $mostRecentActivity public property
     */
    public $mostRecentActivity;

    /**
     * The number of replies and comments for this topic
     * @maps reply_count
     * @var integer $replyCount public property
     */
    public $replyCount;

    /**
     * The URL slug for the particular topic
     * @var string $slug public property
     */
    public $slug;

    /**
     * The topic status. Values are null, pending, active, complete, rejected
     * @var object $status public property
     */
    public $status;

    /**
     * The type of topic. The possible values are “question”, “problem”, “praise”, “idea”, and “update”.
     * @var string $style public property
     */
    public $style;

    /**
     * The subject line for the topic
     * @var string $subject public property
     */
    public $subject;

    /**
     * The API endpoint that returns the topic object
     * @var string $url public property
     */
    public $url;

    /**
     * The private tag if there is one. If there isn’t one, it returns “false”
     * @maps user_defined_codes
     * @var array $userDefinedCodes public property
     */
    public $userDefinedCodes;

    /**
     * Constructor to set initial or default values of member properties
     * @param   integer           $activeReplies          Initialization value for the property $this->activeReplies       
     * @param   string            $atSfn                  Initialization value for the property $this->atSfn               
     * @param   Author            $author                 Initialization value for the property $this->author              
     * @param   bool              $champion               Initialization value for the property $this->champion            
     * @param   string            $closedAt               Initialization value for the property $this->closedAt            
     * @param   integer           $companyId              Initialization value for the property $this->companyId           
     * @param   string            $content                Initialization value for the property $this->content             
     * @param   string            $createdAt              Initialization value for the property $this->createdAt           
     * @param   Emotitag          $emotitag               Initialization value for the property $this->emotitag            
     * @param   bool              $employee               Initialization value for the property $this->employee            
     * @param   integer           $followerCount          Initialization value for the property $this->followerCount       
     * @param   bool              $following              Initialization value for the property $this->following           
     * @param   bool              $hasPromotedReplies     Initialization value for the property $this->hasPromotedReplies  
     * @param   integer           $id                     Initialization value for the property $this->id                  
     * @param   bool              $isArchived             Initialization value for the property $this->isArchived          
     * @param   bool              $isClosed               Initialization value for the property $this->isClosed            
     * @param   bool              $isRemoved              Initialization value for the property $this->isRemoved           
     * @param   bool              $isSpam                 Initialization value for the property $this->isSpam              
     * @param   string            $lastActiveAt           Initialization value for the property $this->lastActiveAt        
     * @param   string            $meToo                  Initialization value for the property $this->meToo               
     * @param   integer           $meTooCount             Initialization value for the property $this->meTooCount          
     * @param   string            $mostRecentActivity     Initialization value for the property $this->mostRecentActivity  
     * @param   integer           $replyCount             Initialization value for the property $this->replyCount          
     * @param   string            $slug                   Initialization value for the property $this->slug                
     * @param   object            $status                 Initialization value for the property $this->status              
     * @param   string            $style                  Initialization value for the property $this->style               
     * @param   string            $subject                Initialization value for the property $this->subject             
     * @param   string            $url                    Initialization value for the property $this->url                 
     * @param   array             $userDefinedCodes       Initialization value for the property $this->userDefinedCodes    
     */
    public function __construct()
    {
        if(29 == func_num_args())
        {
            $this->activeReplies        = func_get_arg(0);
            $this->atSfn                = func_get_arg(1);
            $this->author               = func_get_arg(2);
            $this->champion             = func_get_arg(3);
            $this->closedAt             = func_get_arg(4);
            $this->companyId            = func_get_arg(5);
            $this->content              = func_get_arg(6);
            $this->createdAt            = func_get_arg(7);
            $this->emotitag             = func_get_arg(8);
            $this->employee             = func_get_arg(9);
            $this->followerCount        = func_get_arg(10);
            $this->following            = func_get_arg(11);
            $this->hasPromotedReplies   = func_get_arg(12);
            $this->id                   = func_get_arg(13);
            $this->isArchived           = func_get_arg(14);
            $this->isClosed             = func_get_arg(15);
            $this->isRemoved            = func_get_arg(16);
            $this->isSpam               = func_get_arg(17);
            $this->lastActiveAt         = func_get_arg(18);
            $this->meToo                = func_get_arg(19);
            $this->meTooCount           = func_get_arg(20);
            $this->mostRecentActivity   = func_get_arg(21);
            $this->replyCount           = func_get_arg(22);
            $this->slug                 = func_get_arg(23);
            $this->status               = func_get_arg(24);
            $this->style                = func_get_arg(25);
            $this->subject              = func_get_arg(26);
            $this->url                  = func_get_arg(27);
            $this->userDefinedCodes     = func_get_arg(28);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['active_replies']       = $this->activeReplies;
        $json['at_sfn']               = $this->atSfn;
        $json['author']               = $this->author;
        $json['champion']             = $this->champion;
        $json['closed_at']            = $this->closedAt;
        $json['company_id']           = $this->companyId;
        $json['content']              = $this->content;
        $json['created_at']           = $this->createdAt;
        $json['emotitag']             = $this->emotitag;
        $json['employee']             = $this->employee;
        $json['follower_count']       = $this->followerCount;
        $json['following']            = $this->following;
        $json['has_promoted_replies'] = $this->hasPromotedReplies;
        $json['id']                   = $this->id;
        $json['is_archived']          = $this->isArchived;
        $json['is_closed']            = $this->isClosed;
        $json['is_removed']           = $this->isRemoved;
        $json['is_spam']              = $this->isSpam;
        $json['last_active_at']       = $this->lastActiveAt;
        $json['me_too']               = $this->meToo;
        $json['me_too_count']         = $this->meTooCount;
        $json['most_recent_activity'] = $this->mostRecentActivity;
        $json['reply_count']          = $this->replyCount;
        $json['slug']                 = $this->slug;
        $json['status']               = $this->status;
        $json['style']                = $this->style;
        $json['subject']              = $this->subject;
        $json['url']                  = $this->url;
        $json['user_defined_codes']   = $this->userDefinedCodes;

        return $json;
    }
}